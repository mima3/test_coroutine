% CLU's iterator sample

from_to = iter(lo, hi: int) yields(int)
    po: stream := stream$primary_output()
    i: int := lo
    while i <= hi do
        stream$putl(po, "  start...yield")
        yield (i)
        stream$putl(po, "  end...yield")
        i := i + 1
    end
end from_to

start_up = proc ()
    po: stream := stream$primary_output()
    stream$putl(po, "start...for")
    for n: int in from_to(1, 5) do
        stream$putl(po, int$unparse(n))
    end
    stream$putl(po, "end...for")
end start_up
